{"mappings":"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","sources":["src/day22/index.js","../js/solutions/22.js"],"sourcesContent":["// @ts-check\n\nimport { scaleCanvasToPixelRatio } from \"../common\"\nimport {\n  parseInput,\n  getConnectionsOnCube,\n  traverseMap,\n} from \"../../../js/solutions/22\"\nimport { range } from \"../../../js/modules/itertools\"\n\nconst canvas = document.getElementById(\"canvas\")\nif (!(canvas instanceof HTMLCanvasElement)) throw new Error(\"no canvas\")\n\nconst ctx = canvas.getContext(\"2d\")\nif (!ctx) throw new Error(\"no ctx\")\n\nconst WIDTH = 200\nconst HEIGHT = 200\nconst SIZE = 2\n\nconst SCALE = scaleCanvasToPixelRatio(ctx, WIDTH * SIZE, HEIGHT * SIZE)\ncanvas.style.width = 200 + \"px\"\ncanvas.style.height = 200 + \"px\"\n\nconst inputForm = document.getElementById(\"input-form\")\nif (!(inputForm instanceof HTMLFormElement)) throw new Error(\"no form\")\nconst speedInput = document.getElementById(\"speed\")\nif (!(speedInput instanceof HTMLInputElement)) throw new Error(\"no speed input\")\n\nlet stepDelay = 100\nspeedInput.value = String(1000 / stepDelay)\n// @ts-ignore\ndocument.querySelector(`[for=\"speed\"]`).innerText =\n  \"Steps per second: \" + 1000 / stepDelay\nspeedInput.addEventListener(\"input\", function (e) {\n  stepDelay = 1000 / Number(this.value)\n  // @ts-ignore\n  document.querySelector(`[for=\"speed\"]`).innerText =\n    \"Steps per second: \" + this.value\n})\n\ninputForm.addEventListener(\"submit\", function (e) {\n  e.preventDefault()\n  const formData = new FormData(this)\n  const input = formData.get(\"input\")?.toString() ?? \"\"\n  draw(input.trimEnd(), ctx)\n})\n\nconst cube = document.querySelector(\".cube\")\nconst radioGroup = document.querySelector(\".radio-group\")\nlet currentClass = \"\"\nfunction changeSide() {\n  if (!(radioGroup instanceof HTMLElement)) {\n    throw new Error(\"no radio group\")\n  }\n  var checkedRadio = radioGroup.querySelector(\":checked\")\n  if (checkedRadio instanceof HTMLInputElement) {\n    var showClass = \"show-\" + checkedRadio.value\n    if (currentClass && cube) {\n      cube.classList.remove(currentClass)\n    }\n    cube?.classList.add(showClass)\n    currentClass = showClass\n  }\n}\nchangeSide()\nradioGroup?.addEventListener(\"change\", changeSide)\n\nfunction updateFaceBackground(faceName, pos) {\n  const face = document.querySelector(`.cube__face--${faceName}`)\n  if (!(canvas instanceof HTMLCanvasElement)) {\n    throw new Error(\"no canvas\")\n  }\n  if (face instanceof HTMLElement) {\n    let faceCanvas = face.querySelector(\"canvas\")\n    let faceCtx\n    if (!faceCanvas) {\n      faceCanvas = document.createElement(\"canvas\")\n      faceCtx = faceCanvas.getContext(\"2d\")\n      if (!faceCtx) throw new Error(\"no ctx\")\n      faceCtx.canvas.width = 50 * SIZE * SCALE\n      faceCtx.canvas.height = 50 * SIZE * SCALE\n      face.appendChild(faceCanvas)\n    }\n    faceCtx = faceCanvas.getContext(\"2d\")\n    if (!faceCtx) throw new Error(\"no ctx\")\n    faceCtx.drawImage(\n      canvas,\n      -pos[0] * 50 * SIZE * SCALE,\n      -pos[1] * 50 * SIZE * SCALE,\n    )\n  }\n}\n\nconst colors = {\n  \".\": \"white\",\n  \"#\": \"#343a40\",\n}\n\nconst dirToChar = {\n  D: \"↑\",\n  U: \"↓\",\n  L: \"←\",\n  R: \"→\",\n}\n\nlet rafHandle = 0\n/**\n * @param {string} input\n * @param {CanvasRenderingContext2D} ctx\n */\nfunction draw(input, ctx) {\n  if (rafHandle) {\n    cancelAnimationFrame(rafHandle)\n  }\n  ctx.canvas.scrollIntoView({ behavior: \"smooth\" })\n\n  const { map, moves, start, sideSize } = parseInput(input)\n  const connections = getConnectionsOnCube(sideSize)\n\n  const iter = traverseMap(map, moves, connections, start, sideSize, true)\n\n  ctx.fillStyle = \"black\"\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n\n  function drawPos(pos, dir, fillStyle, skipUpdate) {\n    ctx.fillStyle = fillStyle\n    ctx.fillRect(pos[0] * SIZE, pos[1] * SIZE, SIZE, SIZE)\n    if (!skipUpdate) {\n      updateFaceBackground(\"front\", [1, 1])\n      updateFaceBackground(\"top\", [1, 0])\n      updateFaceBackground(\"right\", [2, 0])\n      updateFaceBackground(\"bottom\", [1, 2])\n      updateFaceBackground(\"left\", [0, 2])\n      updateFaceBackground(\"back\", [0, 3])\n\n      // rotate to face containing pos\n      let face = \"front\"\n      if (pos[1] < 50) {\n        face = pos[0] < 100 ? \"top\" : \"right\"\n      } else if (pos[1] < 100) {\n        face = \"front\"\n      } else if (pos[1] < 150) {\n        face = pos[0] < 50 ? \"left\" : \"bottom\"\n      } else {\n        face = \"back\"\n      }\n      const faceElement = document.querySelector(\n        `[name=\"rotate-cube-side\"][value=\"${face}\"]`,\n      )\n      if (faceElement instanceof HTMLInputElement) {\n        faceElement.checked = true\n        changeSide()\n      }\n    }\n  }\n\n  function drawInitState() {\n    for (const p of map) {\n      ctx.fillStyle = colors[p.value] ?? \"white\"\n      ctx.fillRect(p.pos[0] * SIZE, p.pos[1] * SIZE, SIZE, SIZE)\n    }\n    drawPos(start, \"R\")\n  }\n\n  drawInitState()\n\n  let lastPos\n  function drawStep() {\n    const result = iter.next()\n    if (result.done) {\n      return\n    }\n    const { dir, pos, move } = result.value\n    if (lastPos) {\n      drawPos(lastPos, dir, \"white\", true)\n      drawPos(lastPos, dir, \"#1971c2a0\", true)\n    }\n    drawPos(pos, dir, \"#e03131\")\n    lastPos = pos\n    // @ts-ignore\n    document.getElementById(\n      \"status\",\n    ).innerText = `Move: ${move}, Dir: ${dirToChar[dir]}`\n  }\n\n  let lastTime = 0\n\n  function drawLoop(dt) {\n    if (lastTime === 0) {\n      lastTime = dt\n      drawStep()\n    } else if (dt - lastTime > stepDelay) {\n      const countSteps = Math.floor((dt - lastTime) / stepDelay)\n      lastTime = dt\n      for (const _ of range(countSteps)) {\n        drawStep()\n      }\n    }\n\n    rafHandle = requestAnimationFrame(drawLoop)\n  }\n  drawLoop(0)\n}\n","// @ts-check\n\nimport { V } from \"../modules/index.js\"\nimport { it, range } from \"../modules/itertools.js\"\nimport { readBlocks, readLines } from \"../modules/lib.js\"\nimport { Map2d } from \"../modules/map2d.js\"\nimport { asDir, DIR_TO_VEC } from \"../modules/vec.js\"\n\n/** @type {import('../modules/types.js').SolutionModuleValid<typeof import('./22.js')>} */\nconst __MODULE_VALID__ = true\n\nexport const useExample = false\n\nexport const exampleInput = `\\\n        ...#\n        .#..\n        #...\n        ....\n...#.......#\n........#...\n..#....#....\n..........#.\n        ...#....\n        .....#..\n        .#......\n        ......#.\n\n10R5L5R10L4R5L5`\n\n/** @typedef {ReturnType<typeof parseInput>} InputType */\n\nexport const parseInput = (/** @type {string} */ input) => {\n  const [mapStr, movesStr] = readBlocks(input)\n  const lines = readLines(mapStr)\n\n  let sideSize = Infinity\n  for (const line of lines) {\n    const trimmed = line.trim()\n    const width = line.length - trimmed.length\n    if (width === 0) continue\n    sideSize = Math.min(sideSize, width)\n  }\n\n  /** @type {Map2d<string>} */\n  const map = new Map2d()\n  for (let y = 0; y < lines.length; y++) {\n    for (let x = 0; x < lines[y].length; x++) {\n      if (lines[y][x] !== \" \") {\n        map.set(V.vec(x, y), lines[y][x])\n      }\n    }\n  }\n\n  const start = it(map)\n    .filter((x) => x.value === \".\")\n    .toArray()\n    .sort((a, b) => a.pos[1] - b.pos[1] || a.pos[0] - b.pos[0])[0].pos\n\n  /** @type {string[]} */\n  const moves = []\n  let cur = \"\"\n  for (let c of movesStr) {\n    if (c === \"L\" || c === \"R\") {\n      if (cur) moves.push(cur, c)\n      cur = \"\"\n    } else {\n      cur += c\n    }\n  }\n  moves.push(cur)\n\n  return {\n    map,\n    start,\n    moves,\n    sideSize,\n  }\n}\n\n/**\n *\n * @param {Map2d<string>} map\n */\nfunction getConnectionsOnPlane(map) {\n  /** @type {Map2d<Record<V.Dir, V.Vec2>>} */\n  const connections = new Map2d()\n\n  for (const { pos } of map) {\n    const connection = /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const up = map.get(V.add(pos, DIR_TO_VEC.U))\n\n    if (up == null) {\n      const nextPos = it(map)\n        .filter((x) => V.x(x.pos) === V.x(pos))\n        .toArray()\n        .sort((a, b) => V.y(a.pos) - V.y(b.pos))[0]\n      connection.U = nextPos.pos\n    }\n\n    const down = map.get(V.add(pos, DIR_TO_VEC.D))\n    if (down == null) {\n      const nextPos = it(map)\n        .filter((x) => V.x(x.pos) === V.x(pos))\n        .toArray()\n        .sort((a, b) => V.y(b.pos) - V.y(a.pos))[0]\n      connection.D = nextPos.pos\n    }\n\n    const left = map.get(V.add(pos, DIR_TO_VEC.L))\n    if (left == null) {\n      const nextPos = it(map)\n        .filter((x) => V.y(x.pos) === V.y(pos))\n        .toArray()\n        .sort((a, b) => V.x(b.pos) - V.x(a.pos))[0]\n      connection.L = nextPos.pos\n    }\n\n    const right = map.get(V.add(pos, DIR_TO_VEC.R))\n    if (right == null) {\n      const nextPos = it(map)\n        .filter((x) => V.y(x.pos) === V.y(pos))\n        .toArray()\n        .sort((a, b) => V.x(a.pos) - V.x(b.pos))[0]\n      connection.R = nextPos.pos\n    }\n\n    connections.set(pos, connection)\n  }\n  return connections\n}\n\nconst DIRS = [asDir(\"D\"), asDir(\"R\"), asDir(\"U\"), asDir(\"L\")]\n\nconst scores = {\n  [asDir(\"R\")]: 0,\n  [asDir(\"D\")]: 1,\n  [asDir(\"L\")]: 2,\n  [asDir(\"U\")]: 3,\n}\n\n/**\n *\n * @param {Map2d<string>} map\n * @param {string[]} moves\n * @param {Map2d<Record<V.Dir, V.Vec2>>} connections\n * @param {V.Vec2} start\n * @param {number} sideSize\n */\nexport function* traverseMap(\n  map,\n  moves,\n  connections,\n  start,\n  sideSize,\n  onCube = false,\n) {\n  let pos = start\n  let dirIdx = 1\n  const visited = new Map2d()\n\n  /**\n   * @param {V.Vec2} pos\n   * @param {V.Dir} dir\n   */\n  function stepFromPosInDir(pos, dir) {\n    let nextPos = V.add(pos, DIR_TO_VEC[dir])\n    const value = map.get(nextPos)\n    if (value === \".\") {\n      pos = nextPos\n      visited.set(pos, dir)\n      return { pos, ok: true, dir }\n    }\n    if (value === \"#\") {\n      return { pos, ok: false, dir }\n    }\n    const connection = connections.get(pos)\n    if (connection == null) {\n      throw new Error(\"no connection at pos \" + pos.join(\",\") + \" dir \" + dir)\n    }\n    if (connection[dir] == null) {\n      throw new Error(\n        \"Connection at pos \" + pos.join(\",\") + \" dir \" + dir + \" is null\",\n      )\n    }\n    if (map.get(connection[dir]) === \"#\") {\n      return { pos, ok: false, dir }\n    }\n    nextPos = connection[dir]\n    if (onCube) {\n      dir = adjustDirectionAfterPlainSwitch(dir, pos, sideSize)\n    }\n    visited.set(pos, dir)\n    return { pos: nextPos, ok: true, dir }\n  }\n\n  /**\n   *\n   * @param {V.Dir} prevDir\n   * @param {V.Vec2} prevPos\n   * @param {V.Dir} nextDir\n   * @param {V.Vec2} nextPos\n   */\n  function assertPlaneSwitch(prevDir, prevPos, nextDir, nextPos) {\n    /** @type {Partial<Record<V.Dir, V.Dir>>} */\n    const counterDirs = { U: \"D\", D: \"U\", L: \"R\", R: \"L\" }\n    const result = stepFromPosInDir(nextPos, counterDirs[nextDir])\n    if (!result.ok) {\n      throw new Error(\"Plane switch failed. Expected to go back to \" + nextPos)\n    }\n    if (result.pos.join(\",\") !== prevPos.join(\",\")) {\n      throw new Error(\n        `Plane switch from ${prevDir} at ${prevPos.join(\n          \",\",\n        )} to ${nextDir} at ${nextPos.join(\n          \",\",\n        )} failed. Expected to go back to ${prevPos.join(\n          \",\",\n        )} but got ${result.pos.join(\",\")}`,\n      )\n    }\n  }\n\n  for (const move of moves) {\n    const num = Number(move)\n    if (isNaN(num)) {\n      dirIdx += move === \"L\" ? -1 : 1\n      dirIdx = (dirIdx + 4) % 4\n      yield {\n        pos,\n        dir: DIRS[dirIdx],\n        visited,\n        move,\n      }\n      continue\n    }\n\n    let dir = DIRS[dirIdx]\n    for (let i = 0; i < num; i++) {\n      const result = stepFromPosInDir(pos, dir)\n      if (!result.ok) {\n        break\n      }\n      assertPlaneSwitch(dir, pos, result.dir, result.pos)\n      pos = result.pos\n      dir = result.dir\n      dirIdx = DIRS.indexOf(dir)\n      yield {\n        pos,\n        dir,\n        visited,\n        move,\n      }\n    }\n  }\n}\n\n/**\n * @param {V.Dir} dir\n * @param {V.Vec2} pos\n * @param {number} sideSize\n * @returns\n */\nfunction adjustDirectionAfterPlainSwitch(dir, pos, sideSize) {\n  switch (dir) {\n    case \"L\": {\n      if (V.x(pos) === sideSize && V.y(pos) < sideSize) {\n        return \"R\" // from face 1 left to face 5, continue to move right\n      } else if (V.x(pos) === sideSize) {\n        return \"U\" // from face 3 left to face 5, continue to move up\n      } else if (V.x(pos) === 0 && V.y(pos) < sideSize * 3) {\n        return \"R\" // from face 5 left to face 1, continue to move right\n      } else if (V.x(pos) === 0) {\n        return \"U\" // from face 6 left to face 1, continue to move up\n      }\n    }\n\n    case \"U\": {\n      if (V.y(pos) === sideSize * 3 - 1) {\n        return \"L\" // from face 4 up to face 6, continue to move left\n      } else if (V.y(pos) === sideSize - 1) {\n        return \"L\" // from face 2 up to face 3, continue to move left\n      } else if (V.y(pos) === sideSize * 4 - 1) {\n        return \"U\" // from face 6 up to face 2, continue to move up\n      }\n    }\n\n    case \"D\": {\n      if (V.y(pos) === 0 && V.x(pos) < sideSize * 2) {\n        return \"R\" // from face 1 down to face 6, continue to move right\n      } else if (V.y(pos) === 0) {\n        return \"D\" // from face 2 down to face 6, continue to move down\n      } else if (V.y(pos) === sideSize * 2) {\n        return \"R\" // from face 5 down to face 3, continue to move right\n      }\n    }\n\n    case \"R\": {\n      if (V.x(pos) === sideSize * 3 - 1) {\n        return \"L\" // from face 2 right to face 4, continue to move left\n      } else if (V.x(pos) === sideSize * 2 - 1 && V.y(pos) < sideSize * 2) {\n        return \"D\" // from face 3 right to face 2, continue to move down\n      } else if (V.x(pos) === sideSize * 2 - 1) {\n        return \"L\" // from face 4 right to face 2, continue to move left\n      } else if (V.x(pos) === sideSize - 1) {\n        return \"D\" // from face 6 right to face 4, continue to move down\n      }\n    }\n  }\n\n  return dir\n}\n\n/**\n * @param {InputType} input\n */\nexport function part1({ map, moves, start, sideSize }) {\n  const connections = getConnectionsOnPlane(map)\n  let { pos, dir } = it(\n    traverseMap(map, moves, connections, start, sideSize),\n  ).last()\n  pos = V.add(pos, V.vec(1, 1))\n  return V.y(pos) * 1000 + V.x(pos) * 4 + scores[dir]\n}\n\n/**\n * @param {number} sideSize\n */\nexport function getConnectionsOnCube(sideSize) {\n  /** @type {Map2d<Record<V.Dir, V.Vec2>>} */\n  const connections = new Map2d()\n\n  // face 1 top\n  // face 6 left\n  for (const d of range(sideSize)) {\n    const pos1 = V.vec(sideSize + d, 0)\n    const connection1 =\n      connections.get(pos1) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const pos6 = V.vec(0, sideSize * 3 + d)\n    const connection6 =\n      connections.get(pos6) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection1.D = pos6\n    connection6.L = pos1\n    connections.set(pos1, connection1)\n    connections.set(pos6, connection6)\n  }\n\n  // face 2 top\n  // face 6 bottom\n  for (const d of range(sideSize)) {\n    const pos2 = V.vec(sideSize * 2 + d, 0)\n    const connection2 =\n      connections.get(pos2) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const pos6 = V.vec(d, sideSize * 4 - 1)\n    const connection6 =\n      connections.get(pos6) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection2.D = pos6\n    connection6.U = pos2\n    connections.set(pos2, connection2)\n    connections.set(pos6, connection6)\n  }\n\n  // face 2 right\n  // face 4 right\n  for (const d of range(sideSize)) {\n    const pos2 = V.vec(sideSize * 3 - 1, d)\n    const connection2 =\n      connections.get(pos2) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const pos4 = V.vec(sideSize * 2 - 1, sideSize * 3 - d - 1)\n    const connection4 =\n      connections.get(pos4) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection2.R = pos4\n    connection4.R = pos2\n    connections.set(pos2, connection2)\n    connections.set(pos4, connection4)\n  }\n\n  // face 2 bottom\n  // face 3 right\n  for (const d of range(sideSize)) {\n    const pos2 = V.vec(sideSize * 2 + d, sideSize - 1)\n    const connection2 =\n      connections.get(pos2) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const pos3 = V.vec(sideSize * 2 - 1, sideSize + d)\n    const connection3 =\n      connections.get(pos3) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection2.U = pos3\n    connection3.R = pos2\n    connections.set(pos2, connection2)\n    connections.set(pos3, connection3)\n  }\n\n  // face 4 bottom\n  // face 6 right\n  for (const d of range(sideSize)) {\n    const pos4 = V.vec(sideSize + d, sideSize * 3 - 1)\n    const pos6 = V.vec(sideSize - 1, sideSize * 3 + d)\n    const connection4 =\n      connections.get(pos4) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const connection6 =\n      connections.get(pos6) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection4.U = pos6\n    connection6.R = pos4\n    connections.set(pos4, connection4)\n    connections.set(pos6, connection6)\n  }\n\n  // face 5 left\n  // face 1 left\n  for (const d of range(sideSize)) {\n    const pos5 = V.vec(0, sideSize * 2 + d)\n    const pos1 = V.vec(sideSize, sideSize - d - 1)\n    const connection5 =\n      connections.get(pos5) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const connection1 =\n      connections.get(pos1) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection5.L = pos1\n    connection1.L = pos5\n    connections.set(pos5, connection5)\n    connections.set(pos1, connection1)\n  }\n\n  // face 5 top\n  // face 3 left\n  for (const d of range(sideSize)) {\n    const pos5 = V.vec(d, sideSize * 2)\n    const pos3 = V.vec(sideSize, sideSize + d)\n    const connection5 =\n      connections.get(pos5) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    const connection3 =\n      connections.get(pos3) ?? /** @type {Record<V.Dir, V.Vec2>} */ ({})\n    connection5.D = pos3\n    connection3.L = pos5\n    connections.set(pos5, connection5)\n    connections.set(pos3, connection3)\n  }\n\n  return connections\n}\n\n/**\n * @param {InputType} input\n */\nexport function part2({ map, moves, start, sideSize }) {\n  const connections = getConnectionsOnCube(sideSize)\n  let { pos, dir } = it(\n    traverseMap(map, moves, connections, start, sideSize, true),\n  ).last()\n\n  pos = V.add(pos, V.vec(1, 1))\n  return V.y(pos) * 1000 + V.x(pos) * 4 + scores[dir]\n}\n"],"names":["$7zFg5","parcelRequire","$idVGl","$96f5e5413a380fe5$export$20bebb8aee8dd3f5","input","mapStr","movesStr","$1CMLe","readBlocks","lines","readLines","sideSize","Infinity","line","trimmed","trim","width","length","Math","min","map","$jOfNW","Map2d","y","x","set","V","vec","start","$c04jy","it","filter","value","toArray","sort","a","b","pos","moves","cur","c","push","$96f5e5413a380fe5$var$DIRS","$hyM6K","asDir","$96f5e5413a380fe5$export$716ff34398d46ffc","connections","onCube","dirIdx","visited","stepFromPosInDir","dir","nextPos","add","DIR_TO_VEC","get","ok","connection","Error","join","$96f5e5413a380fe5$var$adjustDirectionAfterPlainSwitch","assertPlaneSwitch","prevDir","prevPos","nextDir","result","U","D","L","R","move","num","Number","isNaN","i","indexOf","$96f5e5413a380fe5$export$a4a1cbc130dc5ab4","d","range","pos1","connection1","pos6","connection6","d1","pos2","connection2","pos61","connection61","d2","pos21","connection21","pos4","connection4","d3","pos22","connection22","pos3","connection3","d4","pos41","pos62","connection41","connection62","d5","pos5","pos11","connection5","connection11","d6","pos51","pos31","connection51","connection31","$032b6efe189e468a$var$canvas","document","getElementById","HTMLCanvasElement","$032b6efe189e468a$var$ctx","getContext","$032b6efe189e468a$var$SCALE","scaleCanvasToPixelRatio","$032b6efe189e468a$var$WIDTH","$032b6efe189e468a$var$HEIGHT","style","height","$032b6efe189e468a$var$inputForm","HTMLFormElement","$032b6efe189e468a$var$speedInput","HTMLInputElement","$032b6efe189e468a$var$stepDelay","String","querySelector","innerText","addEventListener","e","this","preventDefault","ctx","$032b6efe189e468a$var$rafHandle","cancelAnimationFrame","canvas","scrollIntoView","behavior","iter","drawPos","fillStyle","skipUpdate","fillRect","$032b6efe189e468a$var$updateFaceBackground","face","faceElement","checked","$032b6efe189e468a$var$changeSide","drawInitState","p","$032b6efe189e468a$var$colors","lastPos","drawStep","next","done","$032b6efe189e468a$var$dirToChar","lastTime","drawLoop","dt","countSteps","floor","_","requestAnimationFrame","$032b6efe189e468a$var$draw","FormData","toString","trimEnd","$032b6efe189e468a$var$cube","$032b6efe189e468a$var$radioGroup","$032b6efe189e468a$var$currentClass","HTMLElement","checkedRadio","showClass","classList","remove","faceName","faceCtx","faceCanvas","createElement","appendChild","drawImage"],"version":3,"file":"index.81ad3fec.js.map"}